[tool.poetry]
name = "test-tochka-ai"
version = "0.1.0"
description = ""
authors = ["watchingwhileusleep <watchingwhileusleepx@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.2"
sqlalchemy = "^2.0.35"
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"
alembic = "^1.13.3"
uvicorn = "^0.32.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
pyjwt = "^2.9.0"
pydantic-settings = "^2.5.2"
email-validator = "^2.2.0"
httpx = "^0.27.2"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-postgresql = "^6.1.1"
celery = {extras = ["redis"], version = "^5.4.0"}
pillow = "^11.0.0"
minio = "^7.2.9"
python-multipart = "^0.0.12"
prometheus-client = "^0.21.0"
bcrypt = "^4.2.0"
pytest-redis = "^3.1.2"
flower = "^2.0.1"
aioboto3 = "^13.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
faker = "^30.6.0"
pytest-dotenv = "^0.5.2"

[tool.ruff]
line-length = 79
target-version = "py312"
exclude = [
    "__pycache__",
    "alembic",
    ".git",
    ".venv",
]

[tool.ruff.lint]
    ignore = [
        "DJ008",
        "PT001",
        "PT023",
        "SIM103",
    ]
    select = [
        "B",    # flake8-bugbear,
        "C4",   # flake8-comprehensions
        "DJ",   # flake8-django
        "E",    # pycodestyle error
        "F",    # pyflakes
        "SIM",  # flake8-simplify
        "T20",  # flake8-print
        "W",    # pycodestyle warning
        "UP",   # pyupgrade
        "I",    # isort
    ]

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",
    "F403",
]
"test_*.py" = [
    "S101",
    "E501",
    "ANN201",
]
"*/migrations/*.py" = ["E501"]

[tool.ruff.lint.isort]
known-first-party = [
    "app",
]
known-third-party = [
    "fastapi",
    "sqlalchemy",
    "alembic",
    "asyncpg",
    "psycopg2-binary",
    "uvicorn",
    "passlib",
    "pyjwt",
    "pydantic-settings",
    "email-validator",
    "httpx",
    "pytest",
    "pytest-asyncio",
    "pytest-postgresql",
    "celery",
    "pillow",
    "minio",
    "python-multipart",
    "prometheus-client",
    "bcrypt",
    "pytest-redis",
    "flower",
    "aioboto3",
]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
force-single-line = true

[tool.ruff.format]
quote-style = "double"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
